# Names are UI elements names.
# Tags to be kept empty for now. Tags will specify where in the app descriptions will be available.
# Titles are "dictionary" articles titles.
# Links to be external only. We don't know yet whether referencing to other terms within this list will be supported.

# Terms that are 100% familiar to developers and probably shouldn't be part of this list: API token, Target port, Build command, Run command

# DTUX-1136 Final design https://docs.google.com/document/d/1dMO7oCLdgayoNa3HvpNhvsGhBk9MoGG5TUnvbq8wDjs

- name: Git repo URL or container image
  tags:
  title: Git repo URL or container image
  content: |-
    You can build your application using the source code from your Git repository or a container image.
    * To import code from a Git hosting service, provide the URL to your private or public Git repository. If App Studio can't reach the repository, authorize access to it.
    * To import code from a container image, provide a link to a private or public container registry. If App Studio can't reach the registry, authorize access to it.
  links:
    "[Link title]()"

- name: Start with a sample
  tags:
  title: Sample application
  content: |-
    App Studio provides a catalogue of basic sample applications. You can't modify the settings of sample applications.
  links:
    "[Link title]()"

# Authorization section, option 1, Authorization and Git options
- name: Authorize Git repository
  tags:
  title: Git repository access authorization
  content: |-
    You can sign in to your private Git repository, a login window will open in a separate tab. Alternatively, you can use API token authentication. Maybe a list of supported Git hosting services?
  links:
    "[Link title]()"

# Authorization section, option 2, Authorization
- name: Authorize container registry
  tags:
  title: : Container registry authorization
  content: |-
    You can sign in to your private container registry, a login window will open in a separate tab. Alternatively, you can use API token authentication. Maybe a list of supported container registries?
  links:
    "[Link title]()"

# Explained in the UI: Git reference - Specify from which branch, tag, or commit exactly your source code should be pulled.
# Explained in the UI: Context directory - Specify the subdirectory from which your source code should be pulled.

# DTUX-1135 Final design https://docs.google.com/document/d/1H0jvK2M1ZhTcJWLgqfgS0SIqrzr_54dfZRwyXFvl0nc

- name: Workspace
  tags:
  title: Workspace
  content: |-
    (Copied from the designs). Workspaces provide an overview of your applications. A workspace is your main framework where you can build applications, manage workload versions, and connect infrastructure in one place. Currently, App Studio supports only one workspace.
  links:
    "[Link title]()"

- name: Automatically deploy
  tags:
  title: Automatic deployment
  content: |-
    Automatic deployment is a default choice. With automatic deployment, App Studio generates component details for your application automatically. You can edit the component details.
  links:
    "[Link title]()"

- name: Manually deploy
  tags:
  title: Manual deployment
  content: |-
    Automatic deployment is a default choice. If you select manual deployment, provide component details for your application manually.
  links:
    "[Link title]()"

- name: Build configuration - Runtime
  tags:
  title: Runtime
  content: |-
    Runtime, or a build image, is selected automatically and is a recommended choice. If your Git repository contains a dev file, this field will be read-only. If your Git repository doesn't contain a dev file or App Studio can't detect the runtime, define it by yourself.
  links:
    "[Link title]()"

# Deploy configuration, fields explained in the UI: CPU, Memory, Replicas

- name: Deploy configuration - Environment variables
  tags:
  title: Environment variable
  content: |-
    Lorem ipsum...
  links:
    "[Link title]()"

- name: Deploy configuration - Health checks
  tags:
  title: Health checks
  content: |-
    (Copied from the designs?) All health checks are automatically enabled. The readiness probe determines whether your container is ready to accept service requests, the liveness probe determines whether your container is running, and the startup probe determines whether the application within your container is started. When a health check fails, App Studio removes or kills the pod and restarts your container.
  links:
    "[Link title]()"

# DTUX-1138 Design doc https://docs.google.com/document/d/1hZ7gAe2N5XMILmySdNtbnHcRUOwWn8xQzqCkyMg2Rhc

- name: Application deployed to environments, also Application environments
  tags:
  title: Application environment
  content: |-
    App Studio provides 3 environments: Development (was POC and Sandbox - remove names later), Stage, and Prod.
    (From a pop-up) Development: New componets can be added to the Development environment, and existing components can be redeployed on Development to update their revision. Components can then be promoted to following environments.
    To deploy your application, promote the deployed components from the experimental Development environment to the stage environment and to the production environment.
  links:
    "[Link title]()"

- name: Components
  tags:
  title: Component
  content: |-
    You can deploy multiple components at once or a single component. To view the list of components your application consists of, go to
    Workspaces and choose an environment. Components are listed under Deployment Details.
  links:
    "[Link title]()"
# The 2nd tab on that screen is Deployment History, self-explanatory

- name: Builds
  tags:
  title: Build
  content: |-
    Lorem ipsum...
  links:
    "[Link title]()"

- name: View shortcuts
  tags:
  title: Shortcuts
  content: |-
    Lorem ipsum...
  links:
    "[Link title]()"

- name: View logs, also View deployment logs
  tags:
  title: Logs
  content: |-
    Probably self-explanatory.
  links:
    "[Link title]()"

# DTUX-1148 Design doc https://docs.google.com/document/d/1UgDZt539Q4QuIWNCrRCRaTO3QZMp7sxhf_Jxud_BrAg
# Only repetitions (workspaces, environments, etc)

# SPRINT PRESENTATIONS

# Sprint 211 slides include designs from DTUX-1136 and DTUX-1135 https://docs.google.com/presentation/d/1_M1CJed1m7ETzKM4xcA-gta9YUt00hPQq_XOpxrVlys

# Sprint 213 slides https://docs.google.com/presentation/d/1WQAv_ZT0COqjXl7WkTx4nI97PlEitiS1nmCoamsrKTM
# Candidate on slides 6 and 7
- name: Workspace users
  tags:
  title: Workspace users
  content: |-
    Workspace users are members who have access and can collaborate with you on a project. A member with Admin permissions can manage the list of workspace users.
  links:
    "[Link title]()"

# Sprint 214 slides include the same UX designs as Sprint 213 https://docs.google.com/presentation/d/1x28lwcNyaZpzz6voJnoxW8bvkg9bnQWIroG9t2XkXvM

# Sprint 215 slides include designs from DTUX-1138 https://docs.google.com/presentation/d/1CDItvA0EF6GbY9OfjeUvVBQE-1Ef4zeqL0t4uKeLIM4

