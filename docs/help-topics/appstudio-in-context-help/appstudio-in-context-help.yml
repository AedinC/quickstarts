# This file is obsolete, don't update. Help topics have their own separate repos now.

- name: create-app
  tags:
  title: Create your application
  content: |-
    **Add components**

    An application is a collection of components. To add a component, tell App Studio where to find your code. Here are some possible sources for your code:

    1. **GitHub repository**

       After you provide a Git repo URL, App Studio scans and analyzes the Git directory to determine how many components to add to your application. The number and type of components are determined by the file type in your Git repo, and also by your Git directory file hierarchy.

       For example, your repo might contain in a [devfile](https://devfile.io/docs/2.0.0/defining-environment-variables) or [Dockerfile](https://docs.docker.com/glossary/#dockerfile) for defining a multicomponent application. Or maybe it contains various code sources for App Studio to use for creating a multicomponent application.

       After App Studio analyzes your repo, it builds a Quay container image for your components, then deploys that container to the App Studio Development environment.

       >**NOTE**: App Studio can build apps that are written in the following language stacks and frameworks: Python, Java, Go, .NET, Node.js, Quarkus, and Spring.

    2. **Quay container image**

       Add a link to a container image with your prebuilt app so that App Studio can deploy it to the Development environments. With an image, you can use any programming language you prefer. Your image must be stored in the [Quay container registry](https://quay.io/).

    3) **Sample code**

       Use one of our samples to explore App Studio. They're a great way to test out different languages and frameworks in App Studio.

    **Configure your application**

    App Studio analyzes your code and defines deployment settings for each of your app components. Before we create and deploy your app, check the values in this view. You can also rename each component if you like.

    - Verify the **target port** is correct.

    - Choose how many **CPUs**, **memory**, and **instances** you want for your app. Their number depends on the amount of resources available to you.

    - Enter the **route** for your app. A route is the public URL for your published application.

    - Define **environment variables** to customize how your components are deployed. **Environment variables** are typically defined in a [devfile](https://devfile.io/docs/2.0.0/defining-environment-variables) or [Dockerfile](https://docs.docker.com/glossary/#dockerfile). If your app doesn't contain such files, App Studio tries to extract the needed information from your code with the [Alizer](https://github.com/redhat-developer/alizer) tool.

    >**NOTE**: After you app is created, you can always adjust configuration settings and values for your components in the Application view.
  # This array has currently required due to an internal quickstart bug. It always expect the array to be defined. https://github.com/patternfly/patternfly-quickstarts/pull/162
  links: []

- name: app-view
  tags:
  title: Manage your apps
  content: |-
    Add components, configure component settings, view logs, and monitor build status - all from a single view.

    Switch between the **Components** and **Environment** views to explore different options.

    **The Components view**

    - Click the **Components** card to review the components and their details.

    - Review your application components build statuses, build logs and history.

    - Change the component settings or delete the component in the **Actions** menu.

    - Add new components to your application. New components are automatically deployed to the Development environment.

    >**NOTE**: We rebuild components when you change the source code in Git repos to keep things in sync.


    **The Environment view**

    - Click the **Development** environment card to review deployed components, their deployment statuses and history.

    - Change the component settings in the **Actions** menu.

    - Review the deployment strategy used for the selected environment. Click **Settings** in the main menu on the left to choose a deployment strategy.

      - The **automatic** deployment strategy means all component updates are automatically deployed to the environment.
      - The **manual** deployment strategy means that you need to manually redeploy a component every time you make some changes to it.
  # This array has currently required due to an internal quickstart bug. It always expect the array to be defined. https://github.com/patternfly/patternfly-quickstarts/pull/162
  links: []

- name: create-environment
  tags:
  title: Create a new environment
  content: |-
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  # This array has currently required due to an internal quickstart bug. It always expect the array to be defined. https://github.com/patternfly/patternfly-quickstarts/pull/162
  links: []

- name: promote-component
  tags:
  title: Promote your components
  content: |-
    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
  # This array has currently required due to an internal quickstart bug. It always expect the array to be defined. https://github.com/patternfly/patternfly-quickstarts/pull/162
  links: []

